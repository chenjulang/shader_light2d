{
  "ver": "1.0.15",
  "uuid": "c2657391-9a93-48cb-abba-cd91b3703145",
  "compiledShaders": [
    {
      "vert": "\n#define _IS_VERT_SHADER 1\n\nprecision highp float;\n\n#define PI 3.14159265359\n#define TWOPI 6.28318530718\n\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nvarying vec2 uv0;\nvoid main () {\n    vec4 pos = cc_matViewProj * vec4(a_position, 1);\n    gl_Position = pos;\n    uv0 = a_uv0;\n}\n\n\n",
      "frag": "\n#define _IS_FRAG_SHADER 1\n\nprecision highp float;\n\n#define TWO_PI 6.28318530718\n#define PI 3.141592653\n\nuniform vec3 iResolution;\nuniform float time;\nuniform sampler2D texture;\nuniform vec4 color;\nvarying vec2 uv0;\n\nfloat sphereSDF(vec2 p, float size) {\n\treturn length(p) - size;\n}\n\nfloat boxSDF(vec2 p, vec2 size) {\n\tvec2 r = abs(p) - size;\n    return min(max(r.x, r.y),0.) + length(max(r,vec2(0,0)));\n}\n\nvec3 colormap(float x) {\n    float s = sin(x*6.28);\n    if (x > 0.) {\n    \treturn vec3(1,1,1.+s)/2.;\n    } else {\n        return vec3(1,1.+s,1)/2.;\n    }\n}\n\nvoid AddObj(inout float dist, inout vec3 color, float d, vec3 c) {\n    if (dist > d) {\n        dist = d;\n        color = c;\n    }\n}\n\nvoid scene(in vec2 pos, out vec3 color, out float dist) {\n    dist = 1e9; color = vec3(0,0,0);\n    AddObj(dist, color, boxSDF(pos - vec2(-3,1), vec2(1,1)), vec3(.6,.8,1.));\n    AddObj(dist, color, sphereSDF(pos - vec2(3,1), 1.), vec3(1,.9,.8));\n    AddObj(dist, color, sphereSDF(pos - vec2(.3*sin(time),-2), 0.5), vec3(0,.1,0));\n    AddObj(dist, color, boxSDF(pos - vec2(0,1), vec2(1.5,0.1)), vec3(.3,.1,.1));\n}\n\nvoid trace(vec2 p, vec2 dir, out vec3 c) {\n    for (int i=0;i>-1;i++) {\n        float d;\n        scene(p, c, d);\n        if (d < 1e-3) return;\n        if (d > 1e1) break;\n        p += dir * d;\n    }\n    c = vec3(0,0,0);\n}\n\nfloat random (in vec2 _st) {\n    return fract(sin(dot(_st.xy,\n        vec2(12.9898,78.233)))*\n        43758.5453123);\n}\n\n#define SAMPLES 128\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n     float iTime = time;\n      vec2 uv = vec2(uv0.x,1.-uv0.y);\n    uv-=.5;\n    uv*=30.;\n\n    \n    \n    vec3 col = vec3(0,0,0);\n    for (int i = 0; i < SAMPLES; i++) {\n        float t = (float(i) + random(uv+float(i)+iTime)) / float(SAMPLES) * 2. * 3.1415;\n        vec3 c;\n        trace(uv, vec2(cos(t), sin(t)), c);\n        col += c;\n    }\n    col /= float(SAMPLES);\n    \n    fragColor = vec4(col*2.,1.0);\n}\n\nvoid main () {\n  mainImage(gl_FragColor,uv0);\n}\n\n\n"
    }
  ],
  "subMetas": {}
}